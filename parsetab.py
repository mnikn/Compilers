
# E:\Compilers\parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = '7AFDD569223DAB924A7ABE9F8EEF37CE'
    
_lr_action_items = {'OROR':([2,3,5,6,12,14,16,17,22,24,38,39,42,44,48,49,50,51,52,53,54,55,56,57,58,59,60,65,],[-21,-18,-20,-19,-22,27,-18,27,27,27,-23,27,27,-24,-35,-36,-31,-29,-33,-27,-32,-34,-25,-30,-26,-28,-37,27,]),'RETURN':([0,13,21,47,73,74,76,],[1,1,-4,1,-9,1,-3,]),'NUMBER':([0,1,8,11,13,15,18,19,21,26,27,28,29,30,31,32,33,34,35,36,37,45,47,61,73,74,76,],[6,6,6,6,6,6,6,6,-4,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-9,6,-3,]),'TRUE':([0,1,8,11,13,15,18,19,21,26,27,28,29,30,31,32,33,34,35,36,37,45,47,61,73,74,76,],[2,2,2,2,2,2,2,2,-4,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,-9,2,-3,]),'MINUS':([2,3,5,6,12,14,16,17,22,24,38,39,42,44,48,49,50,51,52,53,54,55,56,57,58,59,60,65,],[-21,-18,-20,-19,-22,36,-18,36,36,36,-23,36,36,-24,36,36,36,-29,36,-27,36,36,-25,36,-26,-28,-37,36,]),'STRING':([0,1,8,11,13,15,18,19,21,26,27,28,29,30,31,32,33,34,35,36,37,45,47,61,73,74,76,],[5,5,5,5,5,5,5,5,-4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,-9,5,-3,]),'LE':([2,3,5,6,12,14,16,17,22,24,38,39,42,44,48,49,50,51,52,53,54,55,56,57,58,59,60,65,],[-21,-18,-20,-19,-22,28,-18,28,28,28,-23,28,28,-24,28,28,-31,-29,-33,-27,-32,-34,-25,28,-26,-28,-37,28,]),'RPAREN':([2,5,6,12,16,19,22,38,40,41,42,43,44,48,49,50,51,52,53,54,55,56,57,58,59,60,62,63,64,69,75,],[-21,-20,-19,-22,-18,-39,44,-23,-38,60,-41,-6,-24,-35,-36,-31,-29,-33,-27,-32,-34,-25,-30,-26,-28,-37,-5,-8,71,-40,-7,]),'SEMICOLON':([2,3,5,6,7,12,14,16,17,38,39,44,46,48,49,50,51,52,53,54,55,56,57,58,59,60,65,68,72,73,],[-21,-18,-20,-19,21,-22,-17,-18,-15,-23,-14,-24,-12,-35,-36,-31,-29,-33,-27,-32,-34,-25,-30,-26,-28,-37,-16,74,-13,-9,]),'LT':([2,3,5,6,12,14,16,17,22,24,38,39,42,44,48,49,50,51,52,53,54,55,56,57,58,59,60,65,],[-21,-18,-20,-19,-22,32,-18,32,32,32,-23,32,32,-24,32,32,-31,-29,-33,-27,-32,-34,-25,32,-26,-28,-37,32,]),'PLUS':([2,3,5,6,12,14,16,17,22,24,38,39,42,44,48,49,50,51,52,53,54,55,56,57,58,59,60,65,],[-21,-18,-20,-19,-22,34,-18,34,34,34,-23,34,34,-24,34,34,34,-29,34,-27,34,34,-25,34,-26,-28,-37,34,]),'COMMA':([2,5,6,12,16,38,42,44,48,49,50,51,52,53,54,55,56,57,58,59,60,63,],[-21,-20,-19,-22,-18,-23,61,-24,-35,-36,-31,-29,-33,-27,-32,-34,-25,-30,-26,-28,-37,70,]),'EQUALEQUAL':([2,3,5,6,12,14,16,17,22,24,38,39,42,44,48,49,50,51,52,53,54,55,56,57,58,59,60,65,],[-21,-18,-20,-19,-22,35,-18,35,35,35,-23,35,35,-24,35,35,-31,-29,-33,-27,-32,-34,-25,-30,-26,-28,-37,35,]),'IDENTIFIER':([0,1,4,8,9,11,13,15,18,19,21,26,27,28,29,30,31,32,33,34,35,36,37,43,45,47,61,70,73,74,76,],[3,16,20,16,23,16,3,16,16,16,-4,16,16,16,16,16,16,16,16,16,16,16,16,63,16,3,16,63,-9,3,-3,]),'$end':([0,10,13,21,25,73,76,],[-2,0,-2,-4,-1,-9,-3,]),'FUNCTION':([0,13,21,73,76,],[4,4,-4,-9,-3,]),'GT':([2,3,5,6,12,14,16,17,22,24,38,39,42,44,48,49,50,51,52,53,54,55,56,57,58,59,60,65,],[-21,-18,-20,-19,-22,33,-18,33,33,33,-23,33,33,-24,33,33,-31,-29,-33,-27,-32,-34,-25,33,-26,-28,-37,33,]),'DIVIDE':([2,3,5,6,12,14,16,17,22,24,38,39,42,44,48,49,50,51,52,53,54,55,56,57,58,59,60,65,],[-21,-18,-20,-19,-22,29,-18,29,29,29,-23,29,29,-24,29,29,29,-29,29,-27,29,29,29,29,29,-28,-37,29,]),'EQUAL':([3,23,],[18,45,]),'RBRACE':([47,67,74,77,],[-10,73,-10,-11,]),'TIMES':([2,3,5,6,12,14,16,17,22,24,38,39,42,44,48,49,50,51,52,53,54,55,56,57,58,59,60,65,],[-21,-18,-20,-19,-22,31,-18,31,31,31,-23,31,31,-24,31,31,31,-29,31,-27,31,31,31,31,31,-28,-37,31,]),'GE':([2,3,5,6,12,14,16,17,22,24,38,39,42,44,48,49,50,51,52,53,54,55,56,57,58,59,60,65,],[-21,-18,-20,-19,-22,30,-18,30,30,30,-23,30,30,-24,30,30,-31,-29,-33,-27,-32,-34,-25,30,-26,-28,-37,30,]),'LPAREN':([0,1,3,8,11,13,15,16,18,19,20,21,26,27,28,29,30,31,32,33,34,35,36,37,45,47,61,73,74,76,],[8,8,19,8,8,8,8,19,8,8,43,-4,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-9,8,-3,]),'VAR':([0,13,21,47,73,74,76,],[9,9,-4,9,-9,9,-3,]),'ELSE':([46,73,],[66,-9,]),'IF':([0,13,21,47,73,74,76,],[11,11,-4,11,-9,11,-3,]),'ANDAND':([2,3,5,6,12,14,16,17,22,24,38,39,42,44,48,49,50,51,52,53,54,55,56,57,58,59,60,65,],[-21,-18,-20,-19,-22,26,-18,26,26,26,-23,26,26,-24,-35,26,-31,-29,-33,-27,-32,-34,-25,-30,-26,-28,-37,26,]),'LBRACE':([2,5,6,12,16,24,38,44,48,49,50,51,52,53,54,55,56,57,58,59,60,66,71,],[-21,-20,-19,-22,-18,47,-23,-24,-35,-36,-31,-29,-33,-27,-32,-34,-25,-30,-26,-28,-37,47,47,]),'FALSE':([0,1,8,11,13,15,18,19,21,26,27,28,29,30,31,32,33,34,35,36,37,45,47,61,73,74,76,],[12,12,12,12,12,12,12,12,-4,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-9,12,-3,]),'NOT':([0,1,8,11,13,15,18,19,21,26,27,28,29,30,31,32,33,34,35,36,37,45,47,61,73,74,76,],[15,15,15,15,15,15,15,15,-4,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-9,15,-3,]),'MOD':([2,3,5,6,12,14,16,17,22,24,38,39,42,44,48,49,50,51,52,53,54,55,56,57,58,59,60,65,],[-21,-18,-20,-19,-22,37,-18,37,37,37,-23,37,37,-24,37,37,37,-29,37,-27,37,37,37,37,37,-28,-37,37,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'stmts':([47,74,],[67,77,]),'args':([19,61,],[40,69,]),'stmt':([0,13,47,74,],[7,7,68,68,]),'element':([0,13,],[13,13,]),'params':([43,70,],[62,75,]),'exp':([0,1,8,11,13,15,18,19,26,27,28,29,30,31,32,33,34,35,36,37,45,47,61,74,],[14,17,22,24,14,38,39,42,48,49,50,51,52,53,54,55,56,57,58,59,65,14,42,14,]),'js':([0,13,],[10,25,]),'optparams':([43,],[64,]),'compoundstmt':([24,66,71,],[46,72,76,]),'optargs':([19,],[41,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> js","S'",1,None,None,None),
  ('js -> element js','js',2,'p_js','jsParser.py',7),
  ('js -> <empty>','js',0,'p_js_empty','jsParser.py',11),
  ('element -> FUNCTION IDENTIFIER LPAREN optparams RPAREN compoundstmt','element',6,'p_element_function','jsParser.py',15),
  ('element -> stmt SEMICOLON','element',2,'p_element_stmt','jsParser.py',19),
  ('optparams -> params','optparams',1,'p_optparams','jsParser.py',23),
  ('optparams -> <empty>','optparams',0,'p_optparams_empty','jsParser.py',27),
  ('params -> IDENTIFIER COMMA params','params',3,'p_params','jsParser.py',31),
  ('params -> IDENTIFIER','params',1,'p_params_one','jsParser.py',35),
  ('compoundstmt -> LBRACE stmts RBRACE','compoundstmt',3,'p_compoundstmt','jsParser.py',39),
  ('stmts -> <empty>','stmts',0,'p_stmts_empty','jsParser.py',43),
  ('stmts -> stmt SEMICOLON stmts','stmts',3,'p_stmts','jsParser.py',47),
  ('stmt -> IF exp compoundstmt','stmt',3,'p_stmt_if','jsParser.py',51),
  ('stmt -> IF exp compoundstmt ELSE compoundstmt','stmt',5,'p_stmt_if_else','jsParser.py',55),
  ('stmt -> IDENTIFIER EQUAL exp','stmt',3,'p_stmt_assigment','jsParser.py',59),
  ('stmt -> RETURN exp','stmt',2,'p_stmt_return','jsParser.py',63),
  ('stmt -> VAR IDENTIFIER EQUAL exp','stmt',4,'p_stmt_var','jsParser.py',67),
  ('stmt -> exp','stmt',1,'p_stmt_exp','jsParser.py',71),
  ('exp -> IDENTIFIER','exp',1,'p_exp_identifier','jsParser.py',86),
  ('exp -> NUMBER','exp',1,'p_exp_number','jsParser.py',90),
  ('exp -> STRING','exp',1,'p_exp_string','jsParser.py',94),
  ('exp -> TRUE','exp',1,'p_exp_true','jsParser.py',98),
  ('exp -> FALSE','exp',1,'p_exp_false','jsParser.py',102),
  ('exp -> NOT exp','exp',2,'p_exp_not','jsParser.py',106),
  ('exp -> LPAREN exp RPAREN','exp',3,'p_exp_parens','jsParser.py',110),
  ('exp -> exp PLUS exp','exp',3,'p_exp_binop','jsParser.py',114),
  ('exp -> exp MINUS exp','exp',3,'p_exp_binop','jsParser.py',115),
  ('exp -> exp TIMES exp','exp',3,'p_exp_binop','jsParser.py',116),
  ('exp -> exp MOD exp','exp',3,'p_exp_binop','jsParser.py',117),
  ('exp -> exp DIVIDE exp','exp',3,'p_exp_binop','jsParser.py',118),
  ('exp -> exp EQUALEQUAL exp','exp',3,'p_exp_binop','jsParser.py',119),
  ('exp -> exp LE exp','exp',3,'p_exp_binop','jsParser.py',120),
  ('exp -> exp LT exp','exp',3,'p_exp_binop','jsParser.py',121),
  ('exp -> exp GE exp','exp',3,'p_exp_binop','jsParser.py',122),
  ('exp -> exp GT exp','exp',3,'p_exp_binop','jsParser.py',123),
  ('exp -> exp ANDAND exp','exp',3,'p_exp_binop','jsParser.py',124),
  ('exp -> exp OROR exp','exp',3,'p_exp_binop','jsParser.py',125),
  ('exp -> IDENTIFIER LPAREN optargs RPAREN','exp',4,'p_exp_call','jsParser.py',130),
  ('optargs -> args','optargs',1,'p_exp_optargs','jsParser.py',134),
  ('optargs -> <empty>','optargs',0,'p_optargs_empty','jsParser.py',138),
  ('args -> exp COMMA args','args',3,'p_args','jsParser.py',142),
  ('args -> exp','args',1,'p_args_one','jsParser.py',146),
]
